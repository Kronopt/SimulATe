#:kivy 1.9.1

#:include bin/ui/dynamic_classes.kv
#:import FadeTransition kivy.uix.screenmanager.FadeTransition
#:import os os
#:import global_variables bin.global_variables
#:import LANGUAGE bin.global_variables.LANGUAGE

GridLayout:
    cols: 3
    language: LANGUAGE

    # keeps references to dropdown and popup instances alive
    __dropdown_and_popup_ids: [initial_scenario_dropdown.__self__, scenario_1_dropdown.__self__, scenario_2_dropdown.__self__, initial_scenario_language_dropdown.__self__, scenario_1_language_dropdown.__self__, scenario_2_language_dropdown.__self__, select_microbiome_dropdown.__self__, popup_warning.__self__, popup_save.__self__]

    # slider/toggles to be disabled/enabled ids
    slider_ids: [initial_density_s, growth_rate_s, antibiotic_inhibition_s, initial_density_r, growth_rate_r, antibiotic_inhibition_r, lymphocyte_inhibition, density_host_death_exponent_button, density_host_death, initial_density_n, proliferation_rate, half_maximum_growth, effector_cells_decay, memory_cells_conversion, default_values_button]
    bacteria_buttons_ids_ent_1: [bacteroides_ent_1, faecalibacterium_ent_1, roseburia_ent_1, bifidobacterium_ent_1, lachnospiraceae_ent_1, parabacteroides_ent_1, alistipes_ent_1, anaerostipes_ent_1, acidaminococcus_ent_1, collinsella_ent_1]
    bacteria_buttons_ids_ent_2: [prevotella_ent_2, bacteroides_ent_2, faecalibacterium_ent_2, lachnospiraceae_ent_2, roseburia_ent_2, collinsella_ent_2, bifidobacterium_ent_2, alistipes_ent_2, streptococcus_ent_2, coprococcus_ent_2]
    bacteria_buttons_ids_ent_3: [bacteroides_ent_3, bifidobacterium_ent_3, faecalibacterium_ent_3, lachnospiraceae_ent_3, alistipes_ent_3, akkermansia_ent_3, ruminococcus_ent_3, collinsella_ent_3, blautia_ent_3, roseburia_ent_3]
    toggle_id: treatment_toggles

    # background color
    canvas:
        Color:
            rgb: 0.1, 0.1, 0.1
        Rectangle:
            pos: self.pos
            size: self.size

    ###############
    # Popup Warning
    ###############

    PopupWarning:
        id: popup_warning
        size_hint: .35, .25
        auto_dismiss: False
        on_parent: if self.parent == root: self.parent.remove_widget(self)

        title: ""
        warning_text: ""

        BoxLayout:
            orientation: "vertical"
            Label:
                text_size: self.parent.width, None
                size: self.texture_size
                font_size: dp(13)

                text: popup_warning.warning_text
            Button:
                text: "OK"
                on_release: popup_warning.dismiss()

    ###################
    # Popup Save Dialog
    ###################

    Popup:
        id: popup_save
        size_hint: .70, .65
        auto_dismiss: False
        on_parent: if self.parent == root: self.parent.remove_widget(self)

        title: root.language["popup_save_dialog_title"]

        BoxLayout:
            orientation: "vertical"

            FileChooserIconView:
                id: file_chooser
                path: os.getcwdu()
                filters: [lambda x,y: os.path.isdir(os.path.join(x, y))]
                dirselect: True
                on_selection: save_text_input.text = self.selection and self.selection[0] or save_text_input.text

            TextInput:
                id: save_text_input
                size_hint_y: None
                height: dp(30)

                readonly: True
                multiline: False
                background_color: 0.2, 0.2, 0.2, 0.5
                cursor_color: 1, 1, 1, 1
                foreground_color: 1, 1, 1, 1
                text: file_chooser.path

            BoxLayout:
                padding: dp(2)
                size_hint_y: None
                height: dp(29)

                Widget

                Button:
                    size_hint_x: None
                    width: dp(120)
                    text: root.language["save_menu"]
                    on_release: app.save(graphs_box, save_text_input.text, popup_warning, (root.language["popup_saving_title"], root.language["popup_saving_message"])), popup_save.dismiss()

                Button:
                    size_hint_x: None
                    width: dp(120)
                    text: root.language["popup_save_dialog_cancel"]
                    on_release: popup_save.dismiss()

    ################
    # Options Layout
    ################

    BoxLayout:
        size_hint_x: None
        width: dp(250)  # fixed options panel width

        # options background color
        canvas:
            Color:
                rgb: 0.15, 0.15, 0.15
            Rectangle:
                pos: self.pos
                size: dp(250), self.size[1]

        ScreenManager:
            id: options_screen_manager
            transition: FadeTransition()

            ###################################
            # Initial Scenario Selection Screen
            ###################################

            Screen:
                name: "initial_screen"

                OptionsLayout:
                    id: initial_scenario_options_layout
                    size_hint_y: 1

                    #############################
                    # Scenario and Language menus
                    #############################

                    BoxLayout:
                        orientation: 'vertical'
                        size_hint_y: None
                        height: dp(56)

                        # Scenario selection
                        Button:
                            id: initial_scenario_selection_button

                            # spinner-like look
                            background_normal: 'atlas://data/images/defaulttheme/spinner'
                            background_disabled_normal: 'atlas://data/images/defaulttheme/spinner_disabled'
                            background_down: 'atlas://data/images/defaulttheme/spinner_pressed'
                            on_release: initial_scenario_dropdown.open(self)
                            on_parent: initial_scenario_dropdown.dismiss()
                            text: root.language["scenario_selection_button"]  + " ..."

                        DropDown:
                            id: initial_scenario_dropdown
                            on_select: _, _, options_screen_manager.current, simulation_speed_slider.disabled, speed_slider_text.disabled  = graphs_layout.button_states(start_button, pause_button, restart_button, args[1][:10], "", app), graphs_layout.scenario_graph(args[1][:10], app.current_microbiome), args[1], False, False

                            Button:
                                id: initial_scenario_single_population
                                size_hint: None, None
                                height: initial_scenario_selection_button.height
                                width: initial_scenario_selection_button.width
                                on_release: initial_scenario_dropdown.select(self.value)
                                text: root.language["selected_scenario_1"]
                                value: 'scenario_1_options'

                            Button:
                                id: initial_scenario_microbiome
                                size_hint: None, None
                                height: initial_scenario_selection_button.height
                                width: initial_scenario_selection_button.width
                                on_release: initial_scenario_dropdown.select(self.value)
                                text: root.language["selected_scenario_2"]
                                value: 'scenario_2_options'

                        BoxLayout:

                            # Language selection menu
                            Button:
                                id: initial_scenario_language_main_button

                                # spinner-like look
                                background_normal: 'atlas://data/images/defaulttheme/spinner'
                                background_disabled_normal: 'atlas://data/images/defaulttheme/spinner_disabled'
                                background_down: 'atlas://data/images/defaulttheme/spinner_pressed'
                                on_release: initial_scenario_language_dropdown.open(self)
                                on_parent: initial_scenario_language_dropdown.dismiss()
                                text: root.language["language_main_button"] + ": " + root.language["selected_language"]

                            DropDown:
                                id: initial_scenario_language_dropdown
                                on_select: root.language = app.new_language(args[1]) if root.language["selected_language"] != args[1] else root.language

                                Button:
                                    id: initial_scenario_language_button_portuguese
                                    size_hint: None, None
                                    height: initial_scenario_language_main_button.height
                                    width: initial_scenario_language_main_button.width
                                    on_release: initial_scenario_language_dropdown.select(self.value)
                                    text: root.language["language_button_portuguese"]
                                    value: 'pt'
                                Button:
                                    id: initial_scenario_language_button_english
                                    size_hint: None, None
                                    height: initial_scenario_language_main_button.height
                                    width: initial_scenario_language_main_button.width
                                    on_release: initial_scenario_language_dropdown.select(self.value)
                                    text: root.language["language_button_english"]
                                    value: 'en'

                    Widget

            ####################
            # Scenario 1 Options
            ####################

            Screen:
                name: "scenario_1_options"

                ScrollView:
                    scroll_distance: dp(10)
                    scroll_timeout: 200
                    size: self.parent.width, root.height

                    OptionsLayout:
                        id: scenario_1_options_layout
                        height: dp(990)

                        ###################################
                        # Scenario, Language and Save menus
                        ###################################

                        BoxLayout:
                            orientation: 'vertical'
                            size_hint_y: None
                            height: dp(56)

                            # Scenario selection
                            Button:
                                id: scenario_1_selection_button

                                # spinner-like look
                                background_normal: 'atlas://data/images/defaulttheme/spinner'
                                background_disabled_normal: 'atlas://data/images/defaulttheme/spinner_disabled'
                                background_down: 'atlas://data/images/defaulttheme/spinner_pressed'
                                on_release: scenario_1_dropdown.open(self)
                                on_parent: scenario_1_dropdown.dismiss()
                                text: root.language["scenario_selection_button"]  + " ..."

                            DropDown:
                                id: scenario_1_dropdown
                                on_select: _, _, options_screen_manager.current = graphs_layout.button_states(start_button, pause_button, restart_button, args[1][:10], app.current_microbiome, app), graphs_layout.scenario_graph(args[1][:10], app.current_microbiome), args[1]

                                Button:
                                    id: scenario_1_single_population
                                    size_hint: None, None
                                    height: scenario_1_selection_button.height
                                    width: scenario_1_selection_button.width
                                    on_release: scenario_1_dropdown.select(self.value)
                                    text: root.language["selected_scenario_1"]
                                    value: 'scenario_1_options'

                                Button:
                                    id: scenario_1_microbiome
                                    size_hint: None, None
                                    height: scenario_1_selection_button.height
                                    width: scenario_1_selection_button.width
                                    on_release: scenario_1_dropdown.select(self.value)
                                    text: root.language["selected_scenario_2"]
                                    value: 'scenario_2_options'

                            BoxLayout:

                                # Language selection menu
                                Button:
                                    id: scenario_1_language_main_button

                                    # spinner-like look
                                    background_normal: 'atlas://data/images/defaulttheme/spinner'
                                    background_disabled_normal: 'atlas://data/images/defaulttheme/spinner_disabled'
                                    background_down: 'atlas://data/images/defaulttheme/spinner_pressed'
                                    on_release: scenario_1_language_dropdown.open(self)
                                    on_parent: scenario_1_language_dropdown.dismiss()
                                    text: root.language["language_main_button"] + ": " + root.language["selected_language"]

                                DropDown:
                                    id: scenario_1_language_dropdown
                                    on_select: root.language, treatment_toggles.cleared_widgets, treatment_toggles.ids.toggle_classic.state, treatment_toggles.ids.toggle_adaptive.state, treatment_toggles.ids.toggle_user.state, app.treatment_type = (app.new_language(args[1]), treatment_toggles.ids.treatment_options.clear_widgets(), app.check_treatment(graphs_layout, "Classic"), app.check_treatment(graphs_layout, "Adaptive"), app.check_treatment(graphs_layout, "User"), app.check_treatment(graphs_layout)) if root.language["selected_language"] != args[1] else (root.language, None, treatment_toggles.ids.toggle_classic.state, treatment_toggles.ids.toggle_adaptive.state, treatment_toggles.ids.toggle_user.state, app.treatment_type)

                                    Button:
                                        id: scenario_1_language_button_portuguese
                                        size_hint: None, None
                                        height: scenario_1_language_main_button.height
                                        width: scenario_1_language_main_button.width
                                        on_release: scenario_1_language_dropdown.select(self.value)
                                        text: root.language["language_button_portuguese"]
                                        value: 'pt'
                                    Button:
                                        id: scenario_1_language_button_english
                                        size_hint: None, None
                                        height: scenario_1_language_main_button.height
                                        width: scenario_1_language_main_button.width
                                        on_release: scenario_1_language_dropdown.select(self.value)
                                        text: root.language["language_button_english"]
                                        value: 'en'

                                # Save menu
                                Button:
                                    id: scenario_1_save_menu
                                    text: root.language["save_menu"]
                                    on_release: popup_save.open()

                        #######################################
                        # Antibiotic Sensitive Bacteria Options
                        #######################################

                        Label:
                            id: antibiotic_sensitive_bacteria_label
                            size_hint_y: None
                            height: dp(20)
                            text_size: self.size
                            halign: 'left'
                            markup: True
                            text: "[b]" + root.language["antibiotic_sensitive_bacteria_label"] + "[/b]"

                        Widget:
                            id: sensitive_bacteria_line
                            size_hint_y: None
                            height: dp(4)
                            canvas:
                                Color:
                                    rgb: global_variables.BACTERIA_ASSORTMENT.get_bacteria()["Sensitive"].get_line_color()
                                Rectangle:
                                    pos: dp(5), sensitive_bacteria_line.center_y
                                    size: sensitive_bacteria_line.width, dp(3)

                        # Initial density
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: antibiotic_sensitive_bacteria_initial_density
                                text: root.language["bacteria_initial_density"]

                            OptionText:
                                id: antibiotic_sensitive_bacteria_initial_density_value
                                halign: "right"
                                text: str(initial_density_s.value) + root.language["bacteria_initial_density_value"] if initial_density_s.value % 1 != 0 else str(int(initial_density_s.value)) + root.language["bacteria_initial_density_value"]

                        BoxLayout:
                            size_hint_y: None
                            height: dp(25)

                            SmallerSlider:
                                id: initial_density_s
                                min: 1
                                value: app.default_parameters["sensitive_initial_density"]
                                step: 1
                                on_value: app.sensitive_initial_density = self.value

                        # Growth rate
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: antibiotic_sensitive_bacteria_growth_rate
                                size_hint_x: None
                                width: dp(150)
                                text: root.language["bacteria_growth_rate"]

                            OptionText:
                                id: antibiotic_sensitive_bacteria_growth_rate_value
                                halign: "right"
                                text: str(growth_rate_s.value) + root.language["bacteria_growth_rate_value"] if growth_rate_s.value % 1 != 0 else str(int(growth_rate_s.value)) + root.language["bacteria_growth_rate_value"]

                        BoxLayout:
                            size_hint_y: None
                            height: dp(25)

                            SmallerSlider:
                                id: growth_rate_s
                                min: 0.1
                                max: 8
                                value: app.default_parameters["sensitive_growth_rate"]
                                step: 0.1
                                on_value: app.sensitive_growth_rate = self.value

                        # Antibiotic Inhibition
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: antibiotic_sensitive_bacteria_antibiotic_inhibition
                                size_hint_x: None
                                width: dp(150)
                                text: root.language["bacteria_antibiotic_inhibition"]

                            OptionText:
                                halign: "right"
                                text: str(antibiotic_inhibition_s.value) + root.language["bacteria_antibiotic_inhibition_value"] if antibiotic_inhibition_s.value % 1 != 0 else str(int(antibiotic_inhibition_s.value)) + root.language["bacteria_antibiotic_inhibition_value"]

                        BoxLayout:
                            size_hint_y: None
                            height: dp(25)

                            SmallerSlider:
                                id: antibiotic_inhibition_s
                                min: 0
                                max: 1
                                value: app.default_parameters["sensitive_antibiotic_inhibition"]
                                step: 0.01
                                on_value: app.sensitive_antibiotic_inhibition = self.value

                        #######################################
                        # Antibiotic Resistant Bacteria Options
                        #######################################

                        Label:
                            id: antibiotic_resistant_bacteria_label
                            size_hint_y: None
                            height: dp(20)
                            text_size: self.size
                            halign: 'left'
                            markup: True
                            text: "[b]" + root.language["antibiotic_resistant_bacteria_label"] + "[/b]"

                        Widget:
                            id: resistant_bacteria_line
                            size_hint_y: None
                            height: dp(4)
                            canvas:
                                Color:
                                    rgb: global_variables.BACTERIA_ASSORTMENT.get_bacteria()["Resistant"].get_line_color()
                                Rectangle:
                                    pos: dp(5), resistant_bacteria_line.center_y
                                    size: resistant_bacteria_line.width, dp(3)

                        # Initial density
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: antibiotic_resistant_bacteria_initial_density
                                text: root.language["bacteria_initial_density"]

                            OptionText:
                                id: antibiotic_resistant_bacteria_initial_density_value
                                halign: "right"
                                text: str(initial_density_r.value) + root.language["bacteria_initial_density_value"] if initial_density_r.value % 1 != 0 else str(int(initial_density_r.value)) + root.language["bacteria_initial_density_value"]

                        BoxLayout:
                            size_hint_y: None
                            height: dp(25)

                            SmallerSlider:
                                id: initial_density_r
                                min: 1
                                value: app.default_parameters["resistant_initial_density"]
                                step: 1
                                on_value: app.resistant_initial_density = self.value

                        # Growth rate
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: antibiotic_resistant_bacteria_growth_rate
                                size_hint_x: None
                                width: dp(150)
                                text: root.language["bacteria_growth_rate"]

                            OptionText:
                                id: antibiotic_resistant_bacteria_growth_rate_value
                                halign: "right"
                                text: str(growth_rate_r.value) + root.language["bacteria_growth_rate_value"] if growth_rate_r.value % 1 != 0 else str(int(growth_rate_r.value)) + root.language["bacteria_growth_rate_value"]

                        BoxLayout:
                            size_hint_y: None
                            height: dp(25)

                            SmallerSlider:
                                id: growth_rate_r
                                min: 0.1
                                max: growth_rate_s.value
                                value: growth_rate_s.min - growth_rate_s.min + app.default_parameters["resistant_growth_rate"]  # for some reason I can't set a value here if I don't use growth_rate_s.min...
                                step: 0.1
                                on_value: app.resistant_growth_rate = self.value

                        # Antibiotic Inhibition
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: antibiotic_resistant_bacteria_antibiotic_inhibition
                                size_hint_x: None
                                width: dp(150)
                                text: root.language["bacteria_antibiotic_inhibition"]

                            OptionText:
                                halign: "right"
                                text: str(antibiotic_inhibition_r.value) + root.language["bacteria_antibiotic_inhibition_value"] if antibiotic_inhibition_r.value % 1 != 0 else str(int(antibiotic_inhibition_r.value)) + root.language["bacteria_antibiotic_inhibition_value"]

                        BoxLayout:
                            size_hint_y: None
                            height: dp(25)

                            SmallerSlider:
                                id: antibiotic_inhibition_r
                                min: 0
                                max: antibiotic_inhibition_s.value
                                value: app.default_parameters["resistant_antibiotic_inhibition"]
                                step: 0.01
                                on_value: app.resistant_antibiotic_inhibition = self.value

                        #########################
                        # Both Bacteria Options
                        #########################

                        Label:
                            id: both_bacteria_label
                            size_hint_y: None
                            height: dp(20)
                            text_size: self.size
                            halign: 'left'
                            markup: True
                            text: "[b]" + root.language["both_bacteria_label"] + "[/b]"

                        Widget:
                            id: both_bacteria_line
                            size_hint_y: None
                            height: dp(4)
                            canvas:
                                Color:
                                    rgb: global_variables.BACTERIA_ASSORTMENT.get_bacteria()["Total"].get_line_color()
                                Rectangle:
                                    pos: dp(5), both_bacteria_line.center_y
                                    size: both_bacteria_line.width, dp(3)

                        # Lymphocyte Inhibition
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: both_bacteria_lymphocyte_inhibition
                                text: root.language["both_bacteria_lymphocyte_inhibition"]

                            OptionText:
                                id: both_bacteria_lymphocyte_inhibition_value
                                size_hint_x: None
                                width: dp(110)
                                halign: "right"
                                text: ('%.1e' % lymphocyte_inhibition.value) + root.language["both_bacteria_lymphocyte_inhibition_value"]

                        BoxLayout:
                            size_hint_y: None
                            height: dp(25)

                            SmallerSlider:
                                id: lymphocyte_inhibition
                                min: 0.00001
                                max: 0.0001
                                value: app.default_parameters["lymphocyte_inhibition"]
                                step: 0.000001
                                on_value: app.lymphocyte_inhibition = self.value

                        # Density causing death to host
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: both_bacteria_density_death
                                text: root.language["both_bacteria_density_death"]

                            OptionText:
                                size_hint_x: None
                                width: dp(30)
                                halign: "right"
                                text: str(density_host_death.value)

                            # Exponent selection
                            ExponentButton:
                                id: density_host_death_exponent_button
                                text: app.default_parameters["host_death_density_exponent"]
                                on_text: app.host_death_density_exponent = 10**int(args[1][-2:])
                                values: [' e14', ' e13', ' e12', ' e11', ' e10', ' e09', ' e08', ' e07', ' e06', ' e05', ' e04', ' e03']

                            OptionText:
                                id: both_bacteria_density_death_value
                                size_hint_x: None
                                width: dp(36)
                                halign: "right"
                                text: root.language["both_bacteria_density_death_value"]

                        BoxLayout:
                            size_hint_y: None
                            height: dp(25)

                            SmallerSlider:
                                id: density_host_death
                                min: 1
                                max: 9.99
                                value: app.default_parameters["host_death_density_value"]
                                step: 0.01
                                on_value: app.host_death_density_value = self.value

                        ###############################
                        # Immune System Options
                        ###############################

                        Label:
                            id: immune_system_label
                            size_hint_y: None
                            height: dp(20)
                            text_size: self.size
                            halign: 'left'
                            markup: True
                            text: "[b]" + root.language["immune_system_label"] + "[/b]"

                        Widget:
                            id: immune_precursor_cell_line
                            size_hint_y: None
                            height: dp(4)
                            canvas:
                                Color:
                                    rgb: global_variables.immune_system_color
                                Rectangle:
                                    pos: dp(5), immune_precursor_cell_line.center_y
                                    size: immune_precursor_cell_line.width, dp(3)

                        # Initial density
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: immune_system_initial_density
                                text: root.language["immune_system_initial_density"]

                            OptionText:
                                id: immune_system_initial_density_value
                                size_hint_x: None
                                width: dp(66)
                                halign: "right"
                                text: str(initial_density_n.value) + root.language["bacteria_initial_density_value"] if initial_density_n.value % 1 != 0 else str(int(initial_density_n.value)) + root.language["bacteria_initial_density_value"]

                        BoxLayout:
                            size_hint_y: None
                            height: dp(25)

                            SmallerSlider:
                                id: initial_density_n
                                min: 0
                                max: 1500
                                value: app.default_parameters["initial_precursor_cell_density"]
                                step: 1
                                on_value: app.initial_precursor_cell_density = self.value

                        # Proliferation rate
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: immune_system_proliferation_rate
                                size_hint_x: None
                                width: dp(150)
                                text: root.language["immune_system_proliferation_rate"]

                            OptionText:
                                id: immune_system_proliferation_rate_value
                                halign: "right"
                                text: str(proliferation_rate.value) + root.language["bacteria_growth_rate_value"] if proliferation_rate.value % 1 != 0 else str(int(proliferation_rate.value)) + root.language["bacteria_growth_rate_value"]

                        BoxLayout:
                            size_hint_y: None
                            height: dp(25)

                            SmallerSlider:
                                id: proliferation_rate
                                min: 1.2
                                max: 3
                                value: app.default_parameters["immune_cell_proliferation_rate"]
                                step: 0.1
                                on_value: app.immune_cell_proliferation_rate = self.value

                        # Half maximum growth
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: immune_system_half_maximum_growth
                                text: root.language["immune_system_half_maximum_growth"]

                            OptionText:
                                id: immune_system_half_maximum_growth_value
                                size_hint_x: None
                                width: dp(80)
                                halign: "right"
                                text: ('%.1e' % half_maximum_growth.value).replace("+", "") + root.language["bacteria_initial_density_value"]

                        BoxLayout:
                            size_hint_y: None
                            height: dp(25)

                            SmallerSlider:
                                id: half_maximum_growth
                                min: 10000
                                max: 100000
                                value: app.default_parameters["immune_cell_half_maximum_growth"]
                                step: 1000
                                on_value: app.immune_cell_half_maximum_growth = self.value

                        # Effector Cells Decay rate
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: immune_system_effector_decay_rate
                                text: root.language["immune_system_effector_decay_rate"]

                            OptionText:
                                id: immune_system_effector_decay_rate_value
                                size_hint_x: None
                                width: dp(80)
                                halign: "right"
                                text: str(effector_cells_decay.value) + root.language["bacteria_growth_rate_value"] if effector_cells_decay.value % 1 != 0 else str(int(effector_cells_decay.value)) + root.language["bacteria_growth_rate_value"]

                        BoxLayout:
                            size_hint_y: None
                            height: dp(25)

                            SmallerSlider:
                                id: effector_cells_decay
                                min: 0.1
                                max: 0.8
                                value: app.default_parameters["effector_decay_rate"]
                                step: 0.01
                                on_value: app.effector_decay_rate = self.value

                        # Memory Cells conversion
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: immune_system_memory_conversion
                                size_hint_x: None
                                width: dp(180)
                                text: root.language["immune_system_memory_conversion"]

                            OptionText:
                                id: immune_system_memory_conversion_value
                                halign: "right"
                                text: str(memory_cells_conversion.value) if memory_cells_conversion.value % 1 != 0 else str(int(memory_cells_conversion.value))

                        BoxLayout:
                            size_hint_y: None
                            height: dp(25)

                            SmallerSlider:
                                id: memory_cells_conversion
                                min: 0.05
                                max: 0.1
                                value: app.default_parameters["memory_cell_conversion_rate"]
                                step: 0.001
                                on_value: app.memory_cell_conversion_rate = self.value

                        ###############################
                        # Antibiotic Options
                        ###############################

                        Label:
                            id: antibiotic_label
                            size_hint_y: None
                            height: dp(20)
                            text_size: self.size
                            halign: 'left'
                            markup: True
                            text: "[b]" + root.language["antibiotic_label"] + "[/b]"

                        Widget:
                            id: antibiotic_line
                            size_hint_y: None
                            height: dp(4)
                            canvas:
                                Color:
                                    rgb: global_variables.ANTIBIOTIC_ASSORTMENT.get_antibiotics()["Generic Antibiotic"].get_line_color()
                                Rectangle:
                                    pos: dp(5), antibiotic_line.center_y
                                    size: antibiotic_line.width, dp(3)

                        # Mean Concentration
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: antibiotic_mean_concentration
                                text: root.language["antibiotic_mean_concentration"]

                            OptionText:
                                id: antibiotic_mean_concentration_value
                                size_hint_x: None
                                width: dp(80)
                                halign: "right"
                                text: str(mean_concentration.value) + root.language["antibiotic_mean_concentration_value"] if mean_concentration.value % 1 != 0 else str(int(mean_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                        BoxLayout:
                            size_hint_y: None
                            height: dp(25)

                            SmallerSlider:
                                id: mean_concentration
                                min: 1
                                max: 120
                                value: app.default_parameters["antibiotic_mean_concentration"]
                                step: 0.5
                                on_value: app.antibiotic_mean_concentration = self.value

                        # Treatment Type
                        BoxLayout:
                            size_hint_y: None
                            height: dp(20)

                            OptionText:
                                id: antibiotic_treatment_type
                                text: root.language["antibiotic_treatment_type"]

                        Widget:
                            size_hint_y: None
                            height: dp(4)

                        TreatmentType:
                            id: treatment_toggles
                            language: root.language
                            cleared_widgets: None

                        DefaultValuesButton:
                            id: default_values_button
                            text: root.language["default_values_button"]
                            on_release: self.default_values(app)

            ####################
            # Scenario 2 Options
            ####################

            Screen:
                name: "scenario_2_options"

                ScrollView:
                    scroll_distance: dp(10)
                    scroll_timeout: 200
                    size: self.parent.width, root.height

                    OptionsLayout:
                        id: scenario_2_options_layout
                        height: dp(923) if microbiome_screen_manager.current != "empty" else dp(300)

                        ###################################
                        # Scenario, Language and Save menus
                        ###################################

                        BoxLayout:
                            orientation: 'vertical'
                            size_hint_y: None
                            height: dp(56)

                            # Scenario selection
                            Button:
                                id: scenario_2_selection_button

                                # spinner-like look
                                background_normal: 'atlas://data/images/defaulttheme/spinner'
                                background_disabled_normal: 'atlas://data/images/defaulttheme/spinner_disabled'
                                background_down: 'atlas://data/images/defaulttheme/spinner_pressed'
                                on_release: scenario_2_dropdown.open(self)
                                on_parent: scenario_2_dropdown.dismiss()
                                text: root.language["scenario_selection_button"]  + " ..."

                            DropDown:
                                id: scenario_2_dropdown
                                on_select: _, _, options_screen_manager.current = graphs_layout.button_states(start_button, pause_button, restart_button, args[1][:10], app.current_microbiome, app), graphs_layout.scenario_graph(args[1][:10], app.current_microbiome), args[1]

                                Button:
                                    id: scenario_2_single_population
                                    size_hint: None, None
                                    height: scenario_2_selection_button.height
                                    width: scenario_2_selection_button.width
                                    on_release: scenario_2_dropdown.select(self.value)
                                    text: root.language["selected_scenario_1"]
                                    value: 'scenario_1_options'

                                Button:
                                    id: scenario_2_microbiome
                                    size_hint: None, None
                                    height: scenario_2_selection_button.height
                                    width: scenario_2_selection_button.width
                                    on_release: scenario_2_dropdown.select(self.value)
                                    text: root.language["selected_scenario_2"]
                                    value: 'scenario_2_options'

                            BoxLayout:

                                # Language selection menu
                                Button:
                                    id: scenario_2_language_main_button

                                    # spinner-like look
                                    background_normal: 'atlas://data/images/defaulttheme/spinner'
                                    background_disabled_normal: 'atlas://data/images/defaulttheme/spinner_disabled'
                                    background_down: 'atlas://data/images/defaulttheme/spinner_pressed'
                                    on_release: scenario_2_language_dropdown.open(self)
                                    on_parent: scenario_2_language_dropdown.dismiss()
                                    text: root.language["language_main_button"] + ": " + root.language["selected_language"]

                                DropDown:
                                    id: scenario_2_language_dropdown
                                    on_select: root.language = app.new_language(args[1]) if root.language["selected_language"] != args[1] else root.language

                                    Button:
                                        id: scenario_2_language_button_portuguese
                                        size_hint: None, None
                                        height: scenario_2_language_main_button.height
                                        width: scenario_2_language_main_button.width
                                        on_release: scenario_2_language_dropdown.select(self.value)
                                        text: root.language["language_button_portuguese"]
                                        value: 'pt'
                                    Button:
                                        id: scenario_2_language_button_english
                                        size_hint: None, None
                                        height: scenario_2_language_main_button.height
                                        width: scenario_2_language_main_button.width
                                        on_release: scenario_2_language_dropdown.select(self.value)
                                        text: root.language["language_button_english"]
                                        value: 'en'

                                # Save menu
                                Button:
                                    id: scenario_2_save_menu
                                    disabled: True if app.current_microbiome == "" else False
                                    text: root.language["save_menu"]
                                    on_release: popup_save.open()

                        ###################
                        # Select Microbiome
                        ###################

                        Label:
                            id: select_microbiome_label
                            size_hint_y: None
                            height: dp(20)
                            text_size: self.size
                            halign: 'left'
                            markup: True
                            text: "[b]" + root.language["select_microbiome_label"] + "[/b]"

                        Widget:
                            id: select_microbiome_line
                            size_hint_y: None
                            height: dp(4)
                            canvas:
                                Color:
                                    rgb: 1, 1, 1
                                Rectangle:
                                    pos: dp(5), select_microbiome_line.center_y
                                    size: select_microbiome_line.width, dp(3)

                        Button:
                            id: select_microbiome_button
                            size_hint_y: None
                            height: dp(28)

                            # spinner-like look
                            background_normal: 'atlas://data/images/defaulttheme/spinner'
                            background_disabled_normal: 'atlas://data/images/defaulttheme/spinner_disabled'
                            background_down: 'atlas://data/images/defaulttheme/spinner_pressed'
                            on_release: select_microbiome_dropdown.open(self)
                            on_parent: select_microbiome_dropdown.dismiss()
                            text_id: "select_microbiome_button"
                            gut_enterotype_id: ""
                            text: root.language[self.text_id] + " " + self.gut_enterotype_id

                        DropDown:
                            id: select_microbiome_dropdown
                            on_select: _, _, microbiome_screen_manager.current = graphs_layout.button_states(start_button, pause_button, restart_button, app.current_scenario, args[1], app), graphs_layout.scenario_graph(app.current_scenario, args[1]), args[1]

                            Button:
                                id: gut_enterotype_1_button
                                size_hint: None, None
                                height: select_microbiome_button.height
                                width: select_microbiome_button.width
                                on_release: _, select_microbiome_button.text_id, select_microbiome_button.gut_enterotype_id = select_microbiome_dropdown.select("gut_enterotype_1"), "gut_enterotype_button", "1"
                                text: root.language["gut_enterotype_button"] + " 1"
                            Button:
                                id: gut_enterotype_2_button
                                size_hint: None, None
                                height: select_microbiome_button.height
                                width: select_microbiome_button.width
                                on_release: _, select_microbiome_button.text_id, select_microbiome_button.gut_enterotype_id = select_microbiome_dropdown.select("gut_enterotype_2"), "gut_enterotype_button", "2"
                                text: root.language["gut_enterotype_button"] + " 2"
                            Button:
                                id: gut_enterotype_3_button
                                size_hint: None, None
                                height: select_microbiome_button.height
                                width: select_microbiome_button.width
                                on_release: _, select_microbiome_button.text_id, select_microbiome_button.gut_enterotype_id = select_microbiome_dropdown.select("gut_enterotype_3"), "gut_enterotype_button", "3"
                                text: root.language["gut_enterotype_button"] + " 3"

                        ScreenManager:
                            id: microbiome_screen_manager
                            transition: FadeTransition()

                            Screen:
                                name: "empty"

                            ##########################
                            # Gut Enterotype 1 Options
                            ##########################

                            Screen:
                                name: "gut_enterotype_1"

                                BoxLayout:
                                    orientation: "vertical"

                                    Label:
                                        id: gut_enterotype_1_antibiotic_resistance
                                        size_hint_y: None
                                        height: dp(20)
                                        text_size: self.size
                                        halign: 'left'
                                        markup: True
                                        text: "[b]" + root.language["antibiotic_resistance"] + "[/b]"

                                    Widget:
                                        id: gut_enterotype_1_antibiotic_resistance_line
                                        size_hint_y: None
                                        height: dp(4)
                                        canvas:
                                            Color:
                                                rgb: 1, 1, 1
                                            Rectangle:
                                                pos: dp(1), gut_enterotype_1_antibiotic_resistance_line.center_y
                                                size: gut_enterotype_1_antibiotic_resistance_line.width, dp(3)

                                    ##################
                                    # Bacteria Buttons
                                    ##################

                                    BoxLayout:
                                        orientation: "vertical"
                                        size_hint_y: None
                                        height: dp(280)

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: bacteroides_ent_1
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT1.get_bacteria()["Bacteroides"].get_line_color()
                                            bacteria_name: root.language["bacteroides"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: faecalibacterium_ent_1
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT1.get_bacteria()["Faecalibacterium"].get_line_color()
                                            bacteria_name: root.language["faecalibacterium"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: roseburia_ent_1
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT1.get_bacteria()["Roseburia"].get_line_color()
                                            bacteria_name: root.language["roseburia"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: bifidobacterium_ent_1
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT1.get_bacteria()["Bifidobacterium"].get_line_color()
                                            bacteria_name: root.language["bifidobacterium"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: lachnospiraceae_ent_1
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT1.get_bacteria()["Lachnospiraceae"].get_line_color()
                                            bacteria_name: root.language["lachnospiraceae"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: parabacteroides_ent_1
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT1.get_bacteria()["Parabacteroides"].get_line_color()
                                            bacteria_name: root.language["parabacteroides"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: alistipes_ent_1
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT1.get_bacteria()["Alistipes"].get_line_color()
                                            bacteria_name: root.language["alistipes"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: anaerostipes_ent_1
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT1.get_bacteria()["Anaerostipes"].get_line_color()
                                            bacteria_name: root.language["anaerostipes"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: acidaminococcus_ent_1
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT1.get_bacteria()["Acidaminococcus"].get_line_color()
                                            bacteria_name: root.language["acidaminococcus"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: collinsella_ent_1
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT1.get_bacteria()["Collinsella"].get_line_color()
                                            bacteria_name: root.language["collinsella"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_1")["trimethoprims"] = args[1]


                                    Label:
                                        id: gut_enterotype_1_antibiotic_concentration
                                        size_hint_y: None
                                        height: dp(20)
                                        text_size: self.size
                                        halign: 'left'
                                        markup: True
                                        text: "[b]" + root.language["antibiotic_concentrations"] + "[/b]"

                                    Widget:
                                        id: gut_enterotype_1_antibiotic_concentration_line
                                        size_hint_y: None
                                        height: dp(4)
                                        canvas:
                                            Color:
                                                rgb: 1, 1, 1
                                            Rectangle:
                                                pos: dp(1), gut_enterotype_1_antibiotic_concentration_line.center_y
                                                size: gut_enterotype_1_antibiotic_concentration_line.width, dp(3)

                                    ###########################
                                    # Antibiotic Concentrations
                                    ###########################

                                    AntibioticConcentrationBox:
                                        id: gut_1_antibiotic_concentration_box
                                        orientation: "vertical"
                                        size_hint_y: None
                                        height: dp(400)

                                        # Lincosamides Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_1_lincosamides_switch
                                            slider_id: gut_1_lincosamides_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["lincosamides"]

                                                SmallerSwitch:
                                                    id: gut_1_lincosamides_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_1["lincosamides"] = int(self.active)

                                                Widget:
                                                    id: gut_1_lincosamides_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Lincosamides"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_1_lincosamides_rectangle_label.pos[0] + dp(2), gut_1_lincosamides_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_1_lincosamides_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_1["lincosamides"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_1_lincosamides_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_1_lincosamides_concentration.value % 1 != 0 else str(int(gut_1_lincosamides_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Macrolides Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_1_macrolides_switch
                                            slider_id: gut_1_macrolides_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["macrolides"]

                                                SmallerSwitch:
                                                    id: gut_1_macrolides_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_1["macrolides"] = int(self.active)

                                                Widget:
                                                    id: gut_1_macrolides_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Macrolides"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_1_macrolides_rectangle_label.pos[0] + dp(2), gut_1_macrolides_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_1_macrolides_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_1["macrolides"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_1_macrolides_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_1_macrolides_concentration.value % 1 != 0 else str(int(gut_1_macrolides_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Penicillins Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_1_penicillins_switch
                                            slider_id: gut_1_penicillins_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["penicillins"]

                                                SmallerSwitch:
                                                    id: gut_1_penicillins_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_1["penicillins"] = int(self.active)

                                                Widget:
                                                    id: gut_1_penicillins_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Penicillins"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_1_penicillins_rectangle_label.pos[0] + dp(2), gut_1_penicillins_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_1_penicillins_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_1["penicillins"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_1_penicillins_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_1_penicillins_concentration.value % 1 != 0 else str(int(gut_1_penicillins_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Quinolones Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_1_quinolones_switch
                                            slider_id: gut_1_quinolones_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["quinolones"]

                                                SmallerSwitch:
                                                    id: gut_1_quinolones_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_1["quinolones"] = int(self.active)

                                                Widget:
                                                    id: gut_1_quinolones_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Quinolones"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_1_quinolones_rectangle_label.pos[0] + dp(2), gut_1_quinolones_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_1_quinolones_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_1["quinolones"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_1_quinolones_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_1_quinolones_concentration.value % 1 != 0 else str(int(gut_1_quinolones_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Streptogramins Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_1_streptogramins_switch
                                            slider_id: gut_1_streptogramins_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["streptogramins"]

                                                SmallerSwitch:
                                                    id: gut_1_streptogramins_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_1["streptogramins"] = int(self.active)

                                                Widget:
                                                    id: gut_1_streptogramins_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Streptogramins"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_1_streptogramins_rectangle_label.pos[0] + dp(2), gut_1_streptogramins_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_1_streptogramins_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_1["streptogramins"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_1_streptogramins_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_1_streptogramins_concentration.value % 1 != 0 else str(int(gut_1_streptogramins_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Sulfonamides Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_1_sulfonamides_switch
                                            slider_id: gut_1_sulfonamides_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["sulfonamides"]

                                                SmallerSwitch:
                                                    id: gut_1_sulfonamides_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_1["sulfonamides"] = int(self.active)

                                                Widget:
                                                    id: gut_1_sulfonamides_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Sulfonamides"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_1_sulfonamides_rectangle_label.pos[0] + dp(2), gut_1_sulfonamides_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_1_sulfonamides_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_1["sulfonamides"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_1_sulfonamides_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_1_sulfonamides_concentration.value % 1 != 0 else str(int(gut_1_sulfonamides_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Tetacyclines Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_1_tetacyclines_switch
                                            slider_id: gut_1_tetacyclines_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["tetacyclines"]

                                                SmallerSwitch:
                                                    id: gut_1_tetacyclines_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_1["tetacyclines"] = int(self.active)

                                                Widget:
                                                    id: gut_1_tetacyclines_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Tetacyclines"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_1_tetacyclines_rectangle_label.pos[0] + dp(2), gut_1_tetacyclines_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_1_tetacyclines_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_1["tetacyclines"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_1_tetacyclines_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_1_tetacyclines_concentration.value % 1 != 0 else str(int(gut_1_tetacyclines_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Trimethoprims Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_1_trimethoprims_switch
                                            slider_id: gut_1_trimethoprims_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["trimethoprims"]

                                                SmallerSwitch:
                                                    id: gut_1_trimethoprims_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_1["trimethoprims"] = int(self.active)

                                                Widget:
                                                    id: gut_1_trimethoprims_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Trimethoprims"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_1_trimethoprims_rectangle_label.pos[0] + dp(2), gut_1_trimethoprims_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_1_trimethoprims_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_1["trimethoprims"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_1_trimethoprims_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_1_trimethoprims_concentration.value % 1 != 0 else str(int(gut_1_trimethoprims_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                    ########################################
                                    # Antibiotic Control and Default Buttons
                                    ########################################

                                    BoxLayout:
                                        orientation: "vertical"
                                        size_hint_y: None
                                        height: dp(78)

                                        # spacer
                                        Widget:
                                            size_hint_y: None
                                            height: dp(5)

                                        # stop all antibiotic administration
                                        BoxLayout:
                                            size_hint_y: None
                                            height: dp(20)

                                            OptionText:
                                                text: root.language["all_antibiotics_text"]

                                        BoxLayout:
                                            size_hint_y: None
                                            height: dp(25)

                                            Button:
                                                text: root.language["administer_none_button"]
                                                on_release: gut_1_antibiotic_concentration_box.change_switch_state(False)

                                        # default values
                                        Button:
                                            text: root.language["default_concentration_button"]
                                            on_release: gut_1_antibiotic_concentration_box.default_antibiotic_concentrations()

                            ##########################
                            # Gut Enterotype 2 Options
                            ##########################

                            Screen:
                                name: "gut_enterotype_2"

                                BoxLayout:
                                    orientation: "vertical"

                                    Label:
                                        id: gut_enterotype_2_antibiotic_resistance
                                        size_hint_y: None
                                        height: dp(20)
                                        text_size: self.size
                                        halign: 'left'
                                        markup: True
                                        text: "[b]" + root.language["antibiotic_resistance"] + "[/b]"

                                    Widget:
                                        id: gut_enterotype_2_antibiotic_resistance_line
                                        size_hint_y: None
                                        height: dp(4)
                                        canvas:
                                            Color:
                                                rgb: 1, 1, 1
                                            Rectangle:
                                                pos: dp(1), gut_enterotype_2_antibiotic_resistance_line.center_y
                                                size: gut_enterotype_2_antibiotic_resistance_line.width, dp(3)

                                    ##################
                                    # Bacteria Buttons
                                    ##################

                                    BoxLayout:
                                        orientation: "vertical"
                                        size_hint_y: None
                                        height: dp(280)

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: prevotella_ent_2
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT2.get_bacteria()["Prevotella"].get_line_color()
                                            bacteria_name: root.language["prevotella"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: bacteroides_ent_2
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT2.get_bacteria()["Bacteroides"].get_line_color()
                                            bacteria_name: root.language["bacteroides"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: faecalibacterium_ent_2
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT2.get_bacteria()["Faecalibacterium"].get_line_color()
                                            bacteria_name: root.language["faecalibacterium"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: lachnospiraceae_ent_2
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT2.get_bacteria()["Lachnospiraceae"].get_line_color()
                                            bacteria_name: root.language["lachnospiraceae"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: roseburia_ent_2
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT2.get_bacteria()["Roseburia"].get_line_color()
                                            bacteria_name: root.language["roseburia"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: collinsella_ent_2
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT2.get_bacteria()["Collinsella"].get_line_color()
                                            bacteria_name: root.language["collinsella"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: bifidobacterium_ent_2
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT2.get_bacteria()["Bifidobacterium"].get_line_color()
                                            bacteria_name: root.language["bifidobacterium"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: alistipes_ent_2
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT2.get_bacteria()["Alistipes"].get_line_color()
                                            bacteria_name: root.language["alistipes"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: streptococcus_ent_2
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT2.get_bacteria()["Streptococcus"].get_line_color()
                                            bacteria_name: root.language["streptococcus"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: coprococcus_ent_2
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT2.get_bacteria()["Coprococcus"].get_line_color()
                                            bacteria_name: root.language["coprococcus"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_2")["trimethoprims"] = args[1]

                                    Label:
                                        id: gut_enterotype_2_antibiotic_concentration
                                        size_hint_y: None
                                        height: dp(20)
                                        text_size: self.size
                                        halign: 'left'
                                        markup: True
                                        text: "[b]" + root.language["antibiotic_concentrations"] + "[/b]"

                                    Widget:
                                        id: gut_enterotype_2_antibiotic_concentration_line
                                        size_hint_y: None
                                        height: dp(4)
                                        canvas:
                                            Color:
                                                rgb: 1, 1, 1
                                            Rectangle:
                                                pos: dp(1), gut_enterotype_2_antibiotic_concentration_line.center_y
                                                size: gut_enterotype_2_antibiotic_concentration_line.width, dp(3)

                                    ###########################
                                    # Antibiotic Concentrations
                                    ###########################

                                    AntibioticConcentrationBox:
                                        id: gut_2_antibiotic_concentration_box
                                        orientation: "vertical"
                                        size_hint_y: None
                                        height: dp(400)

                                        # Lincosamides Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_2_lincosamides_switch
                                            slider_id: gut_2_lincosamides_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["lincosamides"]

                                                SmallerSwitch:
                                                    id: gut_2_lincosamides_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_2["lincosamides"] = int(self.active)

                                                Widget:
                                                    id: gut_2_lincosamides_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Lincosamides"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_2_lincosamides_rectangle_label.pos[0] + dp(2), gut_2_lincosamides_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_2_lincosamides_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_2["lincosamides"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_2_lincosamides_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_2_lincosamides_concentration.value % 1 != 0 else str(int(gut_2_lincosamides_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Macrolides Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_2_macrolides_switch
                                            slider_id: gut_2_macrolides_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["macrolides"]

                                                SmallerSwitch:
                                                    id: gut_2_macrolides_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_2["macrolides"] = int(self.active)

                                                Widget:
                                                    id: gut_2_macrolides_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Macrolides"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_2_macrolides_rectangle_label.pos[0] + dp(2), gut_2_macrolides_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_2_macrolides_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_2["macrolides"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_2_macrolides_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_2_macrolides_concentration.value % 1 != 0 else str(int(gut_2_macrolides_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Penicillins Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_2_penicillins_switch
                                            slider_id: gut_2_penicillins_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["penicillins"]

                                                SmallerSwitch:
                                                    id: gut_2_penicillins_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_2["penicillins"] = int(self.active)

                                                Widget:
                                                    id: gut_2_penicillins_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Penicillins"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_2_penicillins_rectangle_label.pos[0] + dp(2), gut_2_penicillins_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_2_penicillins_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_2["penicillins"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_2_penicillins_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_2_penicillins_concentration.value % 1 != 0 else str(int(gut_2_penicillins_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Quinolones Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_2_quinolones_switch
                                            slider_id: gut_2_quinolones_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["quinolones"]

                                                SmallerSwitch:
                                                    id: gut_2_quinolones_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_2["quinolones"] = int(self.active)

                                                Widget:
                                                    id: gut_2_quinolones_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Quinolones"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_2_quinolones_rectangle_label.pos[0] + dp(2), gut_2_quinolones_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_2_quinolones_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_2["quinolones"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_2_quinolones_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_2_quinolones_concentration.value % 1 != 0 else str(int(gut_2_quinolones_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Streptogramins Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_2_streptogramins_switch
                                            slider_id: gut_2_streptogramins_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["streptogramins"]

                                                SmallerSwitch:
                                                    id: gut_2_streptogramins_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_2["streptogramins"] = int(self.active)

                                                Widget:
                                                    id: gut_2_streptogramins_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Streptogramins"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_2_streptogramins_rectangle_label.pos[0] + dp(2), gut_2_streptogramins_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_2_streptogramins_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_2["streptogramins"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_2_streptogramins_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_2_streptogramins_concentration.value % 1 != 0 else str(int(gut_2_streptogramins_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Sulfonamides Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_2_sulfonamides_switch
                                            slider_id: gut_2_sulfonamides_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["sulfonamides"]

                                                SmallerSwitch:
                                                    id: gut_2_sulfonamides_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_2["sulfonamides"] = int(self.active)

                                                Widget:
                                                    id: gut_2_sulfonamides_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Sulfonamides"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_2_sulfonamides_rectangle_label.pos[0] + dp(2), gut_2_sulfonamides_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_2_sulfonamides_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_2["sulfonamides"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_2_sulfonamides_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_2_sulfonamides_concentration.value % 1 != 0 else str(int(gut_2_sulfonamides_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Tetacyclines Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_2_tetacyclines_switch
                                            slider_id: gut_2_tetacyclines_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["tetacyclines"]

                                                SmallerSwitch:
                                                    id: gut_2_tetacyclines_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_2["tetacyclines"] = int(self.active)

                                                Widget:
                                                    id: gut_2_tetacyclines_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Tetacyclines"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_2_tetacyclines_rectangle_label.pos[0] + dp(2), gut_2_tetacyclines_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_2_tetacyclines_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_2["tetacyclines"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_2_tetacyclines_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_2_tetacyclines_concentration.value % 1 != 0 else str(int(gut_2_tetacyclines_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Trimethoprims Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_2_trimethoprims_switch
                                            slider_id: gut_2_trimethoprims_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["trimethoprims"]

                                                SmallerSwitch:
                                                    id: gut_2_trimethoprims_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_2["trimethoprims"] = int(self.active)

                                                Widget:
                                                    id: gut_2_trimethoprims_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Trimethoprims"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_2_trimethoprims_rectangle_label.pos[0] + dp(2), gut_2_trimethoprims_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_2_trimethoprims_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_2["trimethoprims"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_2_trimethoprims_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_2_trimethoprims_concentration.value % 1 != 0 else str(int(gut_2_trimethoprims_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                    ########################################
                                    # Antibiotic Control and Default Buttons
                                    ########################################

                                    BoxLayout:
                                        orientation: "vertical"
                                        size_hint_y: None
                                        height: dp(78)

                                        # spacer
                                        Widget:
                                            size_hint_y: None
                                            height: dp(5)

                                        # stop all antibiotic administration
                                        BoxLayout:
                                            size_hint_y: None
                                            height: dp(20)

                                            OptionText:
                                                text: root.language["all_antibiotics_text"]

                                        BoxLayout:
                                            size_hint_y: None
                                            height: dp(25)

                                            Button:
                                                text: root.language["administer_none_button"]
                                                on_release: gut_2_antibiotic_concentration_box.change_switch_state(False)

                                        # default values
                                        Button:
                                            text: root.language["default_concentration_button"]
                                            on_release: gut_2_antibiotic_concentration_box.default_antibiotic_concentrations()

                            ##########################
                            # Gut Enterotype 3 Options
                            ##########################

                            Screen:
                                name: "gut_enterotype_3"

                                BoxLayout:
                                    orientation: "vertical"

                                    Label:
                                        id: gut_enterotype_3_antibiotic_resistance
                                        size_hint_y: None
                                        height: dp(20)
                                        text_size: self.size
                                        halign: 'left'
                                        markup: True
                                        text: "[b]" + root.language["antibiotic_resistance"] + "[/b]"

                                    Widget:
                                        id: gut_enterotype_3_antibiotic_resistance_line
                                        size_hint_y: None
                                        height: dp(4)
                                        canvas:
                                            Color:
                                                rgb: 1, 1, 1
                                            Rectangle:
                                                pos: dp(1), gut_enterotype_3_antibiotic_resistance_line.center_y
                                                size: gut_enterotype_3_antibiotic_resistance_line.width, dp(3)

                                    ##################
                                    # Bacteria Buttons
                                    ##################

                                    BoxLayout:
                                        orientation: "vertical"

                                        size_hint_y: None
                                        height: dp(280)

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: bacteroides_ent_3
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT3.get_bacteria()["Bacteroides"].get_line_color()
                                            bacteria_name: root.language["bacteroides"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: bifidobacterium_ent_3
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT3.get_bacteria()["Bifidobacterium"].get_line_color()
                                            bacteria_name: root.language["bifidobacterium"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: faecalibacterium_ent_3
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT3.get_bacteria()["Faecalibacterium"].get_line_color()
                                            bacteria_name: root.language["faecalibacterium"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: lachnospiraceae_ent_3
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT3.get_bacteria()["Lachnospiraceae"].get_line_color()
                                            bacteria_name: root.language["lachnospiraceae"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            default_values_button_text: root.language["default_values_button"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: alistipes_ent_3
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT3.get_bacteria()["Alistipes"].get_line_color()
                                            bacteria_name: root.language["alistipes"]
                                            default_values_button_text: root.language["default_values_button"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: akkermansia_ent_3
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT3.get_bacteria()["Akkermansia"].get_line_color()
                                            bacteria_name: root.language["akkermansia"]
                                            default_values_button_text: root.language["default_values_button"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: ruminococcus_ent_3
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT3.get_bacteria()["Ruminococcus"].get_line_color()
                                            bacteria_name: root.language["ruminococcus"]
                                            default_values_button_text: root.language["default_values_button"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: collinsella_ent_3
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT3.get_bacteria()["Collinsella"].get_line_color()
                                            bacteria_name: root.language["collinsella"]
                                            default_values_button_text: root.language["default_values_button"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: blautia_ent_3
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT3.get_bacteria()["Blautia"].get_line_color()
                                            bacteria_name: root.language["blautia"]
                                            default_values_button_text: root.language["default_values_button"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"] = args[1]

                                        BacteriaAntibioticResistanceOptionsButton:
                                            id: roseburia_ent_3
                                            canvas_color: global_variables.BACTERIA_ASSORTMENT_GUT3.get_bacteria()["Roseburia"].get_line_color()
                                            bacteria_name: root.language["roseburia"]
                                            default_values_button_text: root.language["default_values_button"]
                                            antibiotic_inhibition_unit: root.language["bacteria_antibiotic_inhibition_value"]
                                            lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"]
                                            macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"]
                                            penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"]
                                            quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"]
                                            streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"]
                                            sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"]
                                            tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"]
                                            trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"]

                                            on_lincosamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["lincosamides"] = args[1]
                                            on_macrolides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["macrolides"] = args[1]
                                            on_penicillins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["penicillins"] = args[1]
                                            on_quinolones_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["quinolones"] = args[1]
                                            on_streptogramins_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["streptogramins"] = args[1]
                                            on_sulfonamides_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["sulfonamides"] = args[1]
                                            on_tetacyclines_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["tetacyclines"] = args[1]
                                            on_trimethoprims_default_value: getattr(app, self.bacteria_name.lower() + "_antibiotic_inhibition_ent_3")["trimethoprims"] = args[1]

                                    Label:
                                        id: gut_enterotype_3_antibiotic_concentration
                                        size_hint_y: None
                                        height: dp(20)
                                        text_size: self.size
                                        halign: 'left'
                                        markup: True
                                        text: "[b]" + root.language["antibiotic_concentrations"] + "[/b]"

                                    Widget:
                                        id: gut_enterotype_3_antibiotic_concentration_line
                                        size_hint_y: None
                                        height: dp(4)
                                        canvas:
                                            Color:
                                                rgb: 1, 1, 1
                                            Rectangle:
                                                pos: dp(1), gut_enterotype_3_antibiotic_concentration_line.center_y
                                                size: gut_enterotype_3_antibiotic_concentration_line.width, dp(3)

                                    ###########################
                                    # Antibiotic Concentrations
                                    ###########################

                                    AntibioticConcentrationBox:
                                        id: gut_3_antibiotic_concentration_box
                                        orientation: "vertical"
                                        size_hint_y: None
                                        height: dp(400)

                                        # Lincosamides Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_3_lincosamides_switch
                                            slider_id: gut_3_lincosamides_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["lincosamides"]

                                                SmallerSwitch:
                                                    id: gut_3_lincosamides_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_3["lincosamides"] = int(self.active)

                                                Widget:
                                                    id: gut_3_lincosamides_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Lincosamides"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_3_lincosamides_rectangle_label.pos[0] + dp(2), gut_3_lincosamides_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_3_lincosamides_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_3["lincosamides"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_3_lincosamides_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_3_lincosamides_concentration.value % 1 != 0 else str(int(gut_3_lincosamides_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Macrolides Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_3_macrolides_switch
                                            slider_id: gut_3_macrolides_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["macrolides"]

                                                SmallerSwitch:
                                                    id: gut_3_macrolides_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_3["macrolides"] = int(self.active)

                                                Widget:
                                                    id: gut_3_macrolides_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Macrolides"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_3_macrolides_rectangle_label.pos[0] + dp(2), gut_3_macrolides_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_3_macrolides_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_3["macrolides"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_3_macrolides_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_3_macrolides_concentration.value % 1 != 0 else str(int(gut_3_macrolides_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Penicillins Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_3_penicillins_switch
                                            slider_id: gut_3_penicillins_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["penicillins"]

                                                SmallerSwitch:
                                                    id: gut_3_penicillins_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_3["penicillins"] = int(self.active)

                                                Widget:
                                                    id: gut_3_penicillins_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Penicillins"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_3_penicillins_rectangle_label.pos[0] + dp(2), gut_3_penicillins_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_3_penicillins_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_3["penicillins"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_3_penicillins_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_3_penicillins_concentration.value % 1 != 0 else str(int(gut_3_penicillins_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Quinolones Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_3_quinolones_switch
                                            slider_id: gut_3_quinolones_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["quinolones"]

                                                SmallerSwitch:
                                                    id: gut_3_quinolones_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_3["quinolones"] = int(self.active)

                                                Widget:
                                                    id: gut_3_quinolones_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Quinolones"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_3_quinolones_rectangle_label.pos[0] + dp(2), gut_3_quinolones_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_3_quinolones_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_3["quinolones"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_3_quinolones_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_3_quinolones_concentration.value % 1 != 0 else str(int(gut_3_quinolones_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Streptogramins Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_3_streptogramins_switch
                                            slider_id: gut_3_streptogramins_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["streptogramins"]

                                                SmallerSwitch:
                                                    id: gut_3_streptogramins_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_3["streptogramins"] = int(self.active)

                                                Widget:
                                                    id: gut_3_streptogramins_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Streptogramins"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_3_streptogramins_rectangle_label.pos[0] + dp(2), gut_3_streptogramins_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_3_streptogramins_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_3["streptogramins"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_3_streptogramins_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_3_streptogramins_concentration.value % 1 != 0 else str(int(gut_3_streptogramins_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Sulfonamides Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_3_sulfonamides_switch
                                            slider_id: gut_3_sulfonamides_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["sulfonamides"]

                                                SmallerSwitch:
                                                    id: gut_3_sulfonamides_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_3["sulfonamides"] = int(self.active)

                                                Widget:
                                                    id: gut_3_sulfonamides_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Sulfonamides"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_3_sulfonamides_rectangle_label.pos[0] + dp(2), gut_3_sulfonamides_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_3_sulfonamides_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_3["sulfonamides"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_3_sulfonamides_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_3_sulfonamides_concentration.value % 1 != 0 else str(int(gut_3_sulfonamides_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Tetacyclines Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_3_tetacyclines_switch
                                            slider_id: gut_3_tetacyclines_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["tetacyclines"]

                                                SmallerSwitch:
                                                    id: gut_3_tetacyclines_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_3["tetacyclines"] = int(self.active)

                                                Widget:
                                                    id: gut_3_tetacyclines_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Tetacyclines"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_3_tetacyclines_rectangle_label.pos[0] + dp(2), gut_3_tetacyclines_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_3_tetacyclines_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_3["tetacyclines"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_3_tetacyclines_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_3_tetacyclines_concentration.value % 1 != 0 else str(int(gut_3_tetacyclines_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                        # Trimethoprims Concentration
                                        BoxLayout:
                                            orientation: "vertical"
                                            size_hint_y: None
                                            height: dp(50)

                                            switch_id: gut_3_trimethoprims_switch
                                            slider_id: gut_3_trimethoprims_concentration
                                            slider_default_value: 6

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                OptionText:
                                                    text: root.language["trimethoprims"]

                                                SmallerSwitch:
                                                    id: gut_3_trimethoprims_switch
                                                    size_hint_x: None
                                                    width: dp(85)
                                                    on_active: app.antibiotic_uptake_ent_3["trimethoprims"] = int(self.active)

                                                Widget:
                                                    id: gut_3_trimethoprims_rectangle_label
                                                    size_hint_x: None
                                                    width: dp(10)
                                                    canvas:
                                                        Color:
                                                            rgb: global_variables.ANTIBIOTIC_ASSORTMENT_GUT1.get_antibiotics()["Trimethoprims"].get_line_color()
                                                        Rectangle:
                                                            pos: gut_3_trimethoprims_rectangle_label.pos[0] + dp(2), gut_3_trimethoprims_rectangle_label.center_y - dp(7)
                                                            size: dp(7), dp(7)

                                            BoxLayout:
                                                size_hint_y: None
                                                height: dp(25)

                                                SmallerSlider:
                                                    id: gut_3_trimethoprims_concentration
                                                    min: 1
                                                    max: 120
                                                    value: 6
                                                    step: 0.5
                                                    on_value: app.antibiotic_concentrations_ent_3["trimethoprims"] = self.value

                                                    width: dp(170)

                                                OptionText:
                                                    size_hint_x: None
                                                    width: dp(60)
                                                    halign: "right"
                                                    text: str(gut_3_trimethoprims_concentration.value) + root.language["antibiotic_mean_concentration_value"] if gut_3_trimethoprims_concentration.value % 1 != 0 else str(int(gut_3_trimethoprims_concentration.value)) + root.language["antibiotic_mean_concentration_value"]

                                    ########################################
                                    # Antibiotic Control and Default Buttons
                                    ########################################

                                    BoxLayout:
                                        orientation: "vertical"
                                        size_hint_y: None
                                        height: dp(78)

                                        # spacer
                                        Widget:
                                            size_hint_y: None
                                            height: dp(5)

                                        # stop all antibiotic administration
                                        BoxLayout:
                                            size_hint_y: None
                                            height: dp(20)

                                            OptionText:
                                                text: root.language["all_antibiotics_text"]

                                        BoxLayout:
                                            size_hint_y: None
                                            height: dp(25)

                                            Button:
                                                text: root.language["administer_none_button"]
                                                on_release: gut_3_antibiotic_concentration_box.change_switch_state(False)

                                        # default values
                                        Button:
                                            text: root.language["default_concentration_button"]
                                            on_release: gut_3_antibiotic_concentration_box.default_antibiotic_concentrations()

    ###############
    # Graphs Layout
    ###############

    GraphsLayout:
        id: graphs_layout
        orientation: 'vertical'
        padding: dp(5)

        bacteria_graph: bacteria_graph_id
        antibiotic_graph: antibiotic_graph_id

        graph_labels: {"x_axis": root.language["graph_x_axis"], "bacteria_y_axis": root.language["graph_bacteria_y_axis"], "antibiotic_y_axis": root.language["graph_antibiotic_y_axis"], "scenario_2_bacteria_y_axis_relative_frequency": root.language["scenario_2_bacteria_y_axis_relative_frequency"], "scenario_2_antibiotic_y_axis": root.language["scenario_2_antibiotic_y_axis"]}
        on_graph_labels: self.update_labels(self.graph_labels)

        BoxLayout:
            id: graphs_box
            orientation: "vertical"

            BoxLayout:
                id: bacteria_graph_id
            BoxLayout
                id: antibiotic_graph_id

        BoxLayout:
            orientation: 'horizontal'
            padding: dp(0), dp(5), dp(0), dp(0)
            size_hint_y: 0.14

            Widget:
                size_hint_x: 0.3

            BoxLayout:
                orientation: 'vertical'

                # Speed Slider
                BoxLayout:
                    id: simulation_speed_box
                    size_hint_y: 0.7

                    OptionText:
                        id: speed_slider_text
                        size_hint_x: None
                        width: dp(75) if simulation_speed_box.size[0] < dp(500) else dp(110)
                        disabled: True
                        halign: "center"
                        valign: "middle"
                        text: root.language["speed_slider_text_short"] if simulation_speed_box.size[0] < 500 else root.language["speed_slider_text"]

                    SmallerSlider:
                        id: simulation_speed_slider
                        size_hint_x: simulation_speed_box.size[0] * 0.8
                        disabled: True
                        min: -20  # negative values to make speed increase from left to right
                        max: -1
                        value: -5
                        step: 0.1
                        on_value: app.simulation_speed = 1/(24.0*abs(self.value))

                #########
                # Buttons
                #########

                BoxLayout:
                    Button:
                        id: restart_button
                        size_hint_x: 0.25
                        text: root.language["restart_button"]
                        disabled: True
                        on_release: app.restart_simulation(graphs_layout, start_button, restart_button, pause_button)
                    Button:
                        id: pause_button
                        size_hint_x: 0.25
                        text: root.language["pause_button"] if (not self.pause_value) else root.language["continue_button"]
                        disabled: True
                        pause_value: False
                        was_pressed: False
                        on_pause_value: app.pause_simulation(graphs_layout, self)
                        on_release: self.was_pressed, self.pause_value = True, not self.pause_value
                    Button:
                        id: start_button
                        sliders_toggles_enabled: True
                        bacteria_buttons_ent_1_enabled: True
                        bacteria_buttons_ent_2_enabled: True
                        bacteria_buttons_ent_3_enabled: True

                        size_hint_x: 0.25
                        text: root.language["start_button"]
                        disabled: True
                        on_release: app.start_simulation(graphs_layout, self, restart_button, pause_button, popup_warning, root)

            Widget:
                size_hint_x: 0.3
